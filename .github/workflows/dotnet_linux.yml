name: benchmark_dotnet_linux

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  ITERATION_COUNT: 5
  BASE_VERSION: dev.838751441
  BRANCH_VERSION: nommap.5a8b1c47a
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  benchmark_linux_windows:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Download .NET Core SDK
        shell: pwsh
        run: |
          curl -sSL https://download.visualstudio.microsoft.com/download/pr/ce3fd989-b69d-439a-9cac-09ad40597db8/2848d49480b6e7b1b2a18cfa46d724e2/dotnet-sdk-6.0.100-preview.7.21379.14-linux-x64.tar.gz -o dotnet.tar.gz
          Expand-7Zip -ArchiveFileName dotnet.tar.gz -TargetPath dotnet

      - name: Prepare v6.0.100-${{env.BASE_VERSION}}
        shell: pwsh
        run: |
          Copy-Item -Path .\dotnet\sdk\6.0.100-preview.7.21379.14 -Destination .\dotnet\sdk\6.0.100-${{env.BASE_VERSION}} -Recurse
          Copy-Item -Path .\artifacts\${{env.BASE_VERSION}}\NuGet.Build.Tasks\bin\Release\netstandard2.0\* -Destination .\dotnet\sdk\6.0.100-${{env.BASE_VERSION}}
          $content = Get-Content -Path .\dotnet\sdk\6.0.100-${{env.BASE_VERSION}}\.version
          $newcontent = $content -replace '6.0.100-preview.7.21379.14', '6.0.100-${{env.BASE_VERSION}}'
          Set-Content -Path '.\dotnet\sdk\6.0.100-${{env.BASE_VERSION}}\.version' -Value $newcontent

      - name: Prepare v6.0.100-${{env.BRANCH_VERSION}}
        shell: pwsh
        run: |
          Copy-Item -Path .\dotnet\sdk\6.0.100-preview.7.21379.14 -Destination .\dotnet\sdk\6.0.100-${{env.BRANCH_VERSION}} -Recurse
          Copy-Item -Path .\artifacts\${{env.BRANCH_VERSION}}\NuGet.Build.Tasks\bin\Release\netstandard2.0\* -Destination .\dotnet\sdk\6.0.100-${{env.BRANCH_VERSION}}\
          $content = Get-Content -Path '.\dotnet\sdk\6.0.100-${{env.BRANCH_VERSION}}\.version'
          $newcontent = $content -replace '6.0.100-preview.7.21379.14', '6.0.100-${{env.BRANCH_VERSION}}'
          Set-Content -Path '.\dotnet\sdk\6.0.100-${{env.BRANCH_VERSION}}\.version' -Value $newcontent

      - name: Checkout test solutions
        shell: pwsh
        run: |
          git clone --recursive https://github.com/dotnet/orleans
          Remove-Item -Path '.\orleans\global.json'
#          git clone --recursive https://github.com/OrchardCMS/OrchardCore.git
#          git clone --recursive https://github.com/NuGet/NuGet.Client.git
  
      - name: Benchmark v6.0.100-${{env.BASE_VERSION}}
        shell: pwsh
        run: |
          Set-Content -Path 'global.json' -Value '{"sdk": { "version": "6.0.100-${{env.BASE_VERSION}}" } }'
          .\scripts\perftests\RunPerformanceTests.ps1 -nugetClientFilePath .\dotnet\dotnet -solutionFilePath .\orleans\Orleans.sln -resultsFilePath results.csv -skipForceRestores -skipNoOpRestores -skipColdRestores -iterationCount ${{env.ITERATION_COUNT}} -staticGraphRestore
          
      - name: Benchmark v6.0.100-${{env.BRANCH_VERSION}}
        shell: pwsh
        run: |
          Set-Content -Path 'global.json' -Value '{"sdk": { "version": "6.0.100-${{env.BRANCH_VERSION}}" } }'
          .\scripts\perftests\RunPerformanceTests.ps1 -nugetClientFilePath .\dotnet\dotnet -solutionFilePath .\orleans\Orleans.sln -resultsFilePath results.csv -skipForceRestores -skipNoOpRestores -skipColdRestores -iterationCount ${{env.ITERATION_COUNT}} -staticGraphRestore
     
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: results_linux_dotnet
          path: results.csv
