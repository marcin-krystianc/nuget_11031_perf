name: benchmark_dotnet_linux

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  ITERATION_COUNT: 10
  BASE_VERSION: rc.1.21458.32
  DEV_VERSION: dev.071a62f73
  BRANCH_VERSION: chainpredicate.4d0767907
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  benchmark_dotnet_linux:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Download .NET Core SDK 6.0.100-${{env.BASE_VERSION}}
        shell: pwsh
        run: |
          curl -sSL https://download.visualstudio.microsoft.com/download/pr/4880c5a4-9c22-47a7-b298-651f1294a385/795f7828d8684059705e625b33027f89/dotnet-sdk-6.0.100-rc.1.21458.32-linux-x64.tar.gz -o dotnet.tar.gz
          New-Item -Name "dotnet" -ItemType "directory"
          tar -xf dotnet.tar.gz -C dotnet
          # Add(prepend) local dotnet to the system PATH
          echo "$env:GITHUB_WORKSPACE/dotnet" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
      - name: Prepare test SDKs
        shell: pwsh
        run: |
          $versions = @("${{env.DEV_VERSION}}", "${{env.BRANCH_VERSION}}")
          ForEach ($version In $versions) {
              Copy-Item -Path .\dotnet\sdk\6.0.100-${{env.BASE_VERSION}} -Destination .\dotnet\sdk\6.0.100-$version -Recurse
              Copy-Item -Path .\artifacts\$version\NuGet.Build.Tasks\bin\Release\netstandard2.0\* -Destination .\dotnet\sdk\6.0.100-$version
              $content = Get-Content -Path .\dotnet\sdk\6.0.100-$version\.version
              $newcontent = $content -replace "6.0.100-${{env.BASE_VERSION}}", "6.0.100-$version"
              Set-Content -Path .\dotnet\sdk\6.0.100-$version\.version -Value $newcontent
          }

      - name: Checkout test solutions
        shell: pwsh
        run: |
          git clone --recursive https://github.com/dotnet/orleans
          git clone --recursive https://github.com/OrchardCMS/OrchardCore.git
          git clone --recursive https://github.com/NuGet/NuGet.Client.git
          Remove-Item -Path 'orleans\global.json'
          Remove-Item -Path 'NuGet.Client\global.json'
  
      - name: Benchmark
        shell: pwsh
        run: |
          $solutions = @("OrchardCore", "orleans")
          $versions = @("${{env.DEV_VERSION}}", "${{env.BRANCH_VERSION}}", "${{env.BASE_VERSION}}")
          For ($i=0; $i -lt 2; $i++) {
              ForEach ($solution In $solutions) {
                  ForEach ($version In $versions) {
                    $sdk = '{"sdk": { "version": "6.0.100-' + $version + '" } }'
                    Set-Content -Path global.json -Value $sdk
                    .\scripts\perftests\RunPerformanceTests.ps1 -nugetClientFilePath dotnet/dotnet -solutionFilePath $solution -resultsFilePath results.csv -skipForceRestores -skipNoOpRestores -skipColdRestores -iterationCount ${{env.ITERATION_COUNT}} -staticGraphRestore
                  }
              }
          }

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: results_linux_dotnet
          path: results.csv
